! function(t, i, a) {
	"use strict";
	var e = !1;
	"rtl" == a("html").data("textdirection") && (e = !0), a(".knob").knob({
		rtl: e,
		draw: function() {
			var t = this.$,
				i = t.attr("style");
			i = i.replace("bold", "normal");
			var e = parseInt(t.css("font-size"), 10),
				r = Math.ceil(1.65 * e);
			i = (i = i.replace("bold", "normal")) + "font-size: " + r + "px;";
			var o = t.attr("data-knob-icon");
			if (t.hide(), a('<i class="knob-center-icon ' + o + '"></i>').insertAfter(t).attr("style", i), "tron" == this.$.data("skin")) {
				this.cursorExt = .3;
				var s, l = this.arc(this.cv);
				return this.g.lineWidth = this.lineWidth, this.o.displayPrevious && (s = this.arc(this.v), this.g.beginPath(), this.g.strokeStyle = this.pColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, s.s, s.e, s.d), this.g.stroke()), this.g.beginPath(), this.g.strokeStyle = this.o.fgColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, l.s, l.e, l.d), this.g.stroke(), this.g.lineWidth = 2, this.g.beginPath(), this.g.strokeStyle = this.o.fgColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + 2 * this.lineWidth / 3, 0, 2 * Math.PI, !1), this.g.stroke(), !1
			}
		}
	});
}(window, document, jQuery);